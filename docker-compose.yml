version: '3.8'
services:
  # Traefik - Proxy inverso y balanceador de carga
  traefik:
    image: traefik:v2.9
    container_name: ms-catalog_traefik
    command:
      - "--api.insecure=true"  # Activa el panel de control de Traefik (opcional)
      - "--providers.docker=true"  # Habilita el proveedor de Docker
      - "--entrypoints.web.address=:80"  # Expone el puerto 80 para HTTP
    ports:
      - "90:80"   # Puerto para HTTP
      - "9080:8080"  # Puerto para el panel de Traefik (opcional)
    networks:
      - microservicios-red
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"  # Permite que Traefik lea la configuraci칩n de Docker

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: ms-catalog_postgres
    environment:
      POSTGRES_DB: ms-catalog
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    ports:
      - "6432:5432"
    volumes:
      - postgres_data_catalog:/var/lib/postgresql/data
    networks:
      - microservicios-red
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5

  # Inicializaci칩n de la base de datos
  db-init:
    image: postgres:15
    container_name: ms-catalog_db-init
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      psql -U postgres -h postgres -c "CREATE DATABASE \"ms-catalog\";"
    environment:
      PGPASSWORD: 1234
    networks:
      - microservicios-red

  # Redis
  redis:
    image: redis:7
    container_name: ms-catalog_redis
    ports:
      - "7379:6379"
    networks:
      - microservicios-red

  # Node.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ms-catalog_app
    ports:
      - "5001:4001"
    environment:
      DATABASE_URL: postgres://postgres:1234@postgres:5432/ms-catalog
      PORT: 4001
      REDIS_URL: redis://redis:6379
      CACHE_EXPIRY: 3600
      RETRY_ATTEMPTS: 3
      RETRY_DELAY: 1000
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    command: npm run dev
    networks:
      - microservicios-red
    labels:
      - "traefik.enable=true"  # Habilita Traefik para este contenedor
      - "traefik.http.routers.app.rule=Host(`localhost`)"  # Define la regla para enrutar el tr치fico al contenedor
      - "traefik.http.services.app.loadbalancer.server.port=4001"  # Puerto de la aplicaci칩n dentro del contenedor

  # K6 Load Testing
  k6:
    image: grafana/k6:latest
    container_name: ms-catalog_k6
    profiles: ["k6"]
    volumes:
      - ./k6:/scripts
    command: run /scripts/load-test.js
    depends_on:
      - app
    networks:
      - microservicios-red

volumes:
  postgres_data_catalog:

networks:
  microservicios-red:
    external: true
